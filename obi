#!/bin/sh

# -----------------------------------------------#
## Variables
## ----------------------------------------------#

# Store the type of project to create
ACTION=$1

# Store the name of the new project which will double as the project folder name
PROJ_FOLDER_NAME="$2"

# If third parameter (project path) is left empty,
case $3 in
	lts|ltp|stl|stp|ptl|pts|-l|-s|-p) PROJ_PATH=`cat ~/.obiconfig`
		;;
		* )
			if [ -z "$3" ]

			# Then use the default project folder
			then
				PROJ_PATH=`cat ~/.obiconfig`
			else
				# Else store the given directory as the project folder as the third variable
				PROJ_PATH=$3/
			fi
esac


# Store the project path and the project name as a single string
PROJ=$PROJ_PATH$PROJ_FOLDER_NAME

CUT_NAME=`echo $PROJ_FOLDER_NAME | cut -c1-3`


# -----------------------------------------------#
## Functions
## ----------------------------------------------#

salts()  {
perl -i -pe '
  BEGIN {
    $keysalts = qx(curl -sS https://api.wordpress.org/secret-key/1.1/salt)
  }
  s/\/\/ Insert_Salts_Below/$keysalts/g
' wp-config.php

}
sql_credentials()  {

	host=`awk -F\' -v H_PATTERN="$H_PATTERN" '$0 ~ H_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	user=`awk -F\' -v U_PATTERN="$U_PATTERN" '$0 ~ U_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	pass=`awk -F\' -v P_PATTERN="$P_PATTERN" '$0 ~ P_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	db=`awk -F\' -v N_PATTERN="$N_PATTERN" '$0 ~ N_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	url=`awk -F'"' -v URL_PATTERN="$URL_PATTERN" '$0 ~ URL_PATTERN {print $2}' "$PROJ/site/wp-config.php"`
}
f_sql_credentials()  {

	f_host=`awk -F\' -v F_H_PATTERN="$F_H_PATTERN" '$0 ~ F_H_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	f_user=`awk -F\' -v F_U_PATTERN="$F_U_PATTERN" '$0 ~ F_U_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	f_pass=`awk -F\' -v F_P_PATTERN="$F_P_PATTERN" '$0 ~ F_P_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	f_db=`awk -F\' -v F_N_PATTERN="$F_N_PATTERN" '$0 ~ F_N_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	find=`awk -F'"' -v F_URL_PATTERN="$F_URL_PATTERN" '$0 ~ F_URL_PATTERN {print $2}' "$PROJ/site/wp-config.php" | awk -F: '{print $2}' | cut -c 3-`
}
r_sql_credentials()  {

	r_host=`awk -F\' -v R_H_PATTERN="$R_H_PATTERN" '$0 ~ R_H_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	r_user=`awk -F\' -v R_U_PATTERN="$R_U_PATTERN" '$0 ~ R_U_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	r_pass=`awk -F\' -v R_P_PATTERN="$R_P_PATTERN" '$0 ~ R_P_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	r_db=`awk -F\' -v R_N_PATTERN="$R_N_PATTERN" '$0 ~ R_N_PATTERN {print $4}' "$PROJ/site/wp-config.php"`
	replace=`awk -F'"' -v R_URL_PATTERN="$R_URL_PATTERN" '$0 ~ R_URL_PATTERN {print $2}' "$PROJ/site/wp-config.php" | awk -F: '{print $2}' | cut -c 3-`
}
empty_second_string_check()  {

	string=$1

	if  [ -z "$string" ]
	then
		clear
		echo ""
		echo "\t\t\t""You didn't enter a desired project folder name"
		echo ""
		echo "\t\t\t""Usage: [new] then a flag [-w for wordpress git repo] or [-g for empty git repo]"
		echo "\t\t\t\tthen [project_name]"
		echo ""
		exit 0
	fi
}
# Check to see if the directory given is writable to not overwrite it
project_exist_check()  {

	project=$1

	if [  -d "$project" -a -w "$project" ]
	then
		clear
		echo ""
		echo "\t\t\t""The desired project folder name you specified already exist"
		echo ""
		exit 0
	fi
}
# Check to see if the directory given is writable to not overwrite it
directory_exist_check()  {

	writable="$1"

	if [ ! -d "$writable" ]
	then

		return 10
	fi
}
file_exist_check ()  {
	file=$1

	if [ ! -f "$file" ]
	then

		return 10
	fi
}
mysql_timestamp() {

	#mysql variables
	THE_DATE="$(date +%A-%m-%d-%Y)"
	THE_DB_NAME=$db
	THE_FILE_NAME=$THE_DATE-$THE_DB_NAME

}
create_directories()  {
	cd "$PROJ_PATH"
	mkdir $PROJ_FOLDER_NAME
	cd $PROJ_FOLDER_NAME
	mkdir -p architecture/estimates architecture assets/ai assets/content assets/images/gif assets/images/jpg assets/images/png assets/images assets/pdf assets/psd assets dumps/local dumps/production dumps/staging dumps emails fonts mock-ups site
	cd site
}
wp_config_check()  {
	file_exist_check "site/wp-config.php"
	ret=$?

	if [ "$ret" == "10" ]
	then
		file_exist_check "wp-config.php"
		ret=$?

		if [ "$ret" == "10" ]
		then
			clear
			echo ""
			echo "\t\t\t""The file [ $file ] does not exist"
			echo ""
			exit 0
		fi
	fi
}
set_dir() {

	MSG="please enter your desired project path without the trailing slash or \nsimply drag and drop the desired folder into this window"
	clear
	main_menu
	read DIRECTORY


	directory_exist_check "$DIRECTORY"
	empty_second_string_check "$DIRECTORY"
}

# -----------------------------------------------#
## Menu System
## ----------------------------------------------#
aprompt="a. Set project working directory"
bprompt="b. Set local environment"
cprompt="c. Set staging environment"
dprompt="d. Set production environment"
eprompt="e. "
fprompt="f. "
gprompt="g. "
hprompt="h. "
iprompt="i. "
jprompt="j. "
kprompt="k. "
lprompt="l. "

invalidchoice () { MSG="Invalid Selection ... Please Try Again" ; } 

achoice() {

set_dir ;

	ret=$?
	if [ "$ret" = "10" ]
	then
		MSG="Directory is not writable or it does not exist"
	else
		MSG="Your project working directory has been set to \n$DIRECTORY"
	fi ;
}
bchoice() { ls -l| more ; echo Press Enter ; read DUMMY ; }
cchoice() { invalidchoice ; }
dchoice() { invalidchoice ; }
echoice() { invalidchoice ; }
fchoice() { invalidchoice ; }
gchoice() { invalidchoice ; }
hchoice() { invalidchoice ; }
ichoice() { invalidchoice ; }
jchoice() { invalidchoice ; }
kchoice() { invalidchoice ; }
lchoice() { invalidchoice ; }


main_menu() {
	clear
	echo `date`
	echo
	echo "\t\t\t" $aprompt
	echo "\t\t\t" $bprompt
	echo "\t\t\t" $cprompt
	echo "\t\t\t" $dprompt
	echo "\t\t\t" $eprompt
	echo "\t\t\t" $fprompt
	echo "\t\t\t" $gprompt
	echo "\t\t\t" $hprompt
	echo "\t\t\t" $iprompt
	echo "\t\t\t" $jprompt
	echo "\t\t\t" $kprompt
	echo "\t\t\t" $lprompt
	echo "\t\t\t"
	echo "\t\t\t"
	echo "\t\t\t"
	echo "\t\t\tx. Exit"
	echo
	echo "$MSG"
	echo
	echo Select by pressing the letter and then ENTER ;
}

MSG=

# -----------------------------------------------#
## Main Logic
## ----------------------------------------------#

case $ACTION in
	setup )
		while true
		do
			main_menu
			MSG=
			read answer

			case $answer
			in
				a|A ) achoice ;;
				b|B ) bchoice ;;
				c|C ) cchoice ;;
				d|D ) dchoice ;;
				e|E ) echoice ;;
				f|F ) fchoice ;;
				g|G ) gchoice ;;
				h|H ) hchoice ;;
				i|I ) ichoice ;;
				j|J ) jchoice ;;
				k|K ) kchoice ;;
				l|L ) lchoice ;;
				x|X ) break ;;
				*) invalidchoice ;;
			esac

		done
		 ;;
	-f)
		empty_second_string_check "$PROJ_FOLDER_NAME"
		project_exist_check "$PROJ"

		clear
		create_directories
		echo "Project Location:" `pwd`
		;;
	-g)
		empty_second_string_check "$PROJ_FOLDER_NAME"
		project_exist_check "$PROJ"

		clear
		create_directories
		cd site
		git init
		git config branch.master.remote beanstalk
		echo ".DS_Store\nwp-config.php" > .gitignore
		ls -laO
		echo "Project Location:" `pwd`
		;;
	-w)
		empty_second_string_check "$PROJ_FOLDER_NAME"
		project_exist_check "$PROJ"

		clear
		create_directories
		cd site
		git init
		# Get latest version of wordpress
		wget http://wordpress.org/latest.zip
		tar --strip-components=1 -zxvf latest.zip
		rm latest.zip
		# Clean up stock wordpress themes/plugins
		rm -Rf wp-content/themes/twentyeleven/
		rm -Rf wp-content/themes/twentytwelve/
		rm -Rf wp-content/plugins/akismet/
		rm wp-content/plugins/hello.php
		rm wp-config-sample.php
		# Get latest version of klas starter theme
		git clone https://github.com/kylelarkin/klas.git wp-content/themes/$PROJ_FOLDER_NAME
		rm -Rf wp-content/themes/$PROJ_FOLDER_NAME/.git
		rm wp-content/themes/$PROJ_FOLDER_NAME/.gitignore
		mv wp-content/themes/$PROJ_FOLDER_NAME/.htaccess .
		mv wp-content/themes/$PROJ_FOLDER_NAME/wp-config.php .
		# Setup local database values in wp-config.php
		user=`awk -F\' '/local_db_user/ {print $4}' "wp-config.php"`
		name="$PROJ_FOLDER_NAME"_local_db
		pass=`awk -F\' '/local_db_password/ {print $4}' "wp-config.php"`
		host=`ifconfig | grep -Eo 192.168.[0-9]+.[0-9]+ | head -n 1`
		grep -rl replace_with_local_db wp-config.php | xargs sed -i.bak "s/replace_with_local_db/${name}/g"
		grep -rl replace_with_local_ip wp-config.php | xargs sed -i.bak "s/replace_with_local_ip/${host}/g"
		grep -rl wp_ wp-config.php | xargs sed -i.bak "s/wp_/${CUT_NAME}_/"
		grep -rl \".dev\" wp-config.php | xargs sed -i.bak "s/\".dev\"/\"http:\/\/${PROJ_FOLDER_NAME}.dev\"/"
		# add stalts
		salts
		# clean up
		rm wp-config.php.bak
		# Build project's .gitignore
		echo ".DS_Store \n.sass-cache/\nwp-config.php" > .gitignore
		# Create project's databse
		/Applications/MAMP/Library/bin/mysql -u $user -h localhost -p$pass -Bse "CREATE DATABASE ${name};"
		ls -laO
		echo "Project Location:" `pwd`
		;;
	-d)
		empty_second_string_check "$PROJ_FOLDER_NAME"
		directory_exist_check "$PROJ"


		case $3 in
			-l )
				H_PATTERN=local_db_host
				U_PATTERN=local_db_user
				P_PATTERN=local_db_password
				N_PATTERN=local_db_name
				URL_PATTERN=local_site_url
				;;
			-s)

				H_PATTERN=staging_db_host
				U_PATTERN=staging_db_user
				P_PATTERN=staging_db_password
				N_PATTERN=staging_db_name
				URL_PATTERN=staging_site_url


				;;
			-p )
				H_PATTERN=prod_db_host
				U_PATTERN=prod_db_user
				P_PATTERN=prod_db_password
				N_PATTERN=prod_db_name
				URL_PATTERN=prod_site_url
				;;
		esac

				#looks for database username, database password and database name in the wp-config file
				sql_credentials

				mysql_timestamp

				cd "$PROJ"

				if [ ! -d "dumps" ]
				then
				mkdir dumps
				fi

				wp_config_check


				/Applications/MAMP/Library/bin/mysqldump --net_buffer_length=50000 -h$host -u$user -p$pass $db > "dumps/$THE_FILE_NAME.sql"

				clear
				echo "\t\t\t"
				echo "\t\t\t""Database dump complete"
				echo "\t\t\t"
		;;
	-s)
		empty_second_string_check "$PROJ_FOLDER_NAME"
		directory_exist_check "$PROJ"

		case $3 in
		    lts )
				backup_folder=staging

		        #staging information used to import
		        F_H_PATTERN=staging_db_host
		        F_U_PATTERN=staging_db_user
		        F_P_PATTERN=staging_db_password
		        F_N_PATTERN=staging_db_name

		        #find prod url to find and replace prod url throughout the db
		        F_URL_PATTERN=local_site_url


		        #local information used to dump
		        R_H_PATTERN=local_db_host
		        R_U_PATTERN=local_db_user
		        R_P_PATTERN=local_db_password
		        R_N_PATTERN=local_db_name

		        #local url to replace prod url throughout the db
		        R_URL_PATTERN=staging_site_url
		        ;;
		    ltp )
				backup_folder=production

		        #prod information used to import
		        F_H_PATTERN=prod_db_host
		        F_U_PATTERN=prod_db_user
		        F_P_PATTERN=prod_db_password
		        F_N_PATTERN=prod_db_name

		        #find local url to find and replace local url throughout the db
		        F_URL_PATTERN=local_site_url


		        R_H_PATTERN=local_db_host
		        R_U_PATTERN=local_db_user
		        R_P_PATTERN=local_db_password
		        R_N_PATTERN=local_db_name

		        #prod url to replace local url throughout the db
		        R_URL_PATTERN=prod_site_url
		        ;;
		    stl )
				backup_folder=local

		        #local information used to import
		        F_H_PATTERN=local_db_host
		        F_U_PATTERN=local_db_user
		        F_P_PATTERN=local_db_password
		        F_N_PATTERN=local_db_name

		        #find staging url to find and replace staging url throughout the db
		        F_URL_PATTERN=staging_site_url

		        #staging information used to dump
		        R_H_PATTERN=staging_db_host
		        R_U_PATTERN=staging_db_user
		        R_P_PATTERN=staging_db_password
		        R_N_PATTERN=staging_db_name

		        #local url to replace prod url throughout the db
		        R_URL_PATTERN=local_site_url
		        ;;
		    stp )
				backup_folder=production

		        #prod information used to import
		        F_H_PATTERN=prod_db_host
		        F_U_PATTERN=prod_db_user
		        F_P_PATTERN=prod_db_password
		        F_N_PATTERN=prod_db_name

		        #find staging url to find and replace staging url throughout the db
		        F_URL_PATTERN=staging_site_url

		        #staging information used to dump
		        R_H_PATTERN=staging_db_host
		        R_U_PATTERN=staging_db_user
		        R_P_PATTERN=staging_db_password
		        R_N_PATTERN=staging_db_name

		        #prod url to replace prod url throughout the db
		        R_URL_PATTERN=prod_site_url
		        ;;
		    ptl )
				backup_folder=local

		        #local information used to import
		        F_H_PATTERN=local_db_host
		        F_U_PATTERN=local_db_user
		        F_P_PATTERN=local_db_password
		        F_N_PATTERN=local_db_name

		        #find prod url to find and replace prod url throughout the db
		        F_URL_PATTERN=prod_site_url

		        #prod information used to dump
		        R_H_PATTERN=prod_db_host
		        R_U_PATTERN=prod_db_user
		        R_P_PATTERN=prod_db_password
		        R_N_PATTERN=prod_db_name

		        #local url to replace prod url throughout the db
		        R_URL_PATTERN=local_site_url
		        ;;
		    pts )
				backup_folder=staging

		        #staging information used to import
		        F_H_PATTERN=staging_db_host
		        F_U_PATTERN=staging_db_user
		        F_P_PATTERN=staging_db_password
		        F_N_PATTERN=staging_db_name

		        #find prod url to find and replace prod url throughout the db
		        F_URL_PATTERN=prod_site_url


		        #prod information used to dump
		        R_H_PATTERN=prod_db_host
		        R_U_PATTERN=prod_db_user
		        R_P_PATTERN=prod_db_password
		        R_N_PATTERN=prod_db_name

		        #staging url to replace prod url throughout the db
		        R_URL_PATTERN=staging_site_url
		        ;;
		        *)
				clear
				echo ""
				echo "\t\t\t""Please specify database sync order"
				echo ""
				echo "\t\t\t""Usage: obi [-s] [project_name] [direction]"
				echo ""
				exit 0
				;;
		esac

	cd "$PROJ"

	if [ ! -d "dumps" ]
	then
	mkdir dumps
	fi

	wp_config_check

	#mysql credentials used to find
	f_sql_credentials

	#mysql credentials used to replace
	r_sql_credentials

	mysql_timestamp

	/Applications/MAMP/Library/bin/mysqldump --net_buffer_length=50000 -h$f_host -u$f_user -p$f_pass $f_db > "dumps/$backup_folder/$THE_FILE_NAME.sql"

	/Applications/MAMP/Library/bin/mysqldump --net_buffer_length=50000 -h$r_host -u$r_user -p$r_pass $r_db > "dumps/$THE_FILE_NAME.sql"

	sed -i '' -e "s,$find,$replace,g" $PROJ_PATH$PROJ_FOLDER_NAME/dumps/$THE_FILE_NAME.sql

	/Applications/MAMP/Library/bin/mysql -h$f_host -u$f_user -p$f_pass $f_db < "dumps/$THE_FILE_NAME.sql"

	clear
	echo ""
	echo "\t\t\t""Database sync complete"
	echo ""

esac